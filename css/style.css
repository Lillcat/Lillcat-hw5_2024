/* Step 1: Animate logo w/ keyframes.  It should start at a width of 25px and grow to 475px.  It should also start with an opacity of 0 and end with an opacity of 1. The animation should take 5 seconds and only happen when the page is loaded 

Specified width for the logo so the animation would not snap back after growing */

@keyframes grow {
  from {
    width: 25px;
    opacity: 0;
  }
  to {
    width: 475px;
    opacity: 1;
  }
}

#logo {
  animation: grow 5s;
  width: 475px;
}

/* 
Step 2: 
Edit the body element to use the Poppins font (using Google fonts) with serif as a backup.  
It should also use the image ‚Äúconcrete_seamless.png‚Äù as a background-image with a backup color of #f1f1f1. 
*/

body {
  font-family: "Poppins", serif;
  background-image: url("../images/concrete_seamless.png");
  background-color: #f1f1f1;
}

/* Step 3: Edit the css for the header tag (all instances) to use flex to match our example. */
header {
  display: flex;
  align-items: center;
  flex-direction: column;
}

/* Step 4: Edit the css for the nav_links class to use flex to match our example. Do not modify the list items or the links - modify the nav_links class to use flex.  */
.nav_links {
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Step 5: Style the links so that they have the same color even after they have been visited. This is a ‚Äúchallenge‚Äù problem. You should not give or receive help when completing it. */
a:visited {
  color: blue;
}

/* Step 6: Identify the proper selector to style ONLY those header elements that are direct children of a card class.  The required styling is the following: 
background: #288088,
solid 2px border using #45ADAD,
20px of padding on the top and the bottom, 
50px border-radius on the top left and right corners.  */

.card > header {
  background: #288088;
  border: solid 2px #45adad;
  padding-top: 20px;
  padding-bottom: 20px;
  border-radius: 50px 50px 0px 0px;
}

/* Check your work. The corners probably aren‚Äôt curving quite as you expected. Use Inspect Element to fix this problem. You will need to utilize a second selector. 

Rounded the corners of the card class too so the background was no longer showing */

.card {
  border-radius: 50px 50px 0px 0px;
}

/* Went over steps 7 - 13 in discussion; commented out my incorrect code */

/* Steps 7 and 8 go together.  You won‚Äôt have the right ‚Äúlook‚Äù until you finish both. */

/* Step 7: Edit the css for the card class to match our example. Achieve this by using a flex-property to specify an initial ‚Äúsize‚Äù of 450px.  You need to think about this from a ‚Äúflex‚Äù perspective and realize that flex-direction will affect the size of the elements.  You can see that in the mobile view they all have the same width.  */

/* Step 8: Edit the css for the pricing class to match our example. You should use flex and the cards should be centered both horizontally and vertically. */

.card {
  flex-basis: 450px;
}

/* my orginal code before fixing
.pricing {
  display: flex;
  flex-direction: row; 
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
} */

.pricing {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
}
/* Step 9: Style the images in the gallery class. These elements will have a solid 10px border with a color of #50C7C7, 10px margin on all four sides and a width of 300px. */

.gallery img {
  border: solid 10px #50c7c7;
  margin: 10px;
  width: 300px;
}

/* Step 10: Edit the css for the gallery class to use flex to match our example. The changes are not from media queries, but from the use of flex. */

.gallery {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

/* Look at 1200px screenshot  */

/* Step 11: Edit the css for the header tag (all instances) and the nav_links class to match our example using flex-properties. The logo should be as far to the left as possible and the links as far to the right as possible. Use flex properties, NOT position properties. 

Used justify-content space-between to position the logo far left. Placed the nav links within their own flex container so they could be spaced properly*/

@media screen and (min-width: 900px) {
  header {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
  }
  .nav_links {
    display: flex;
    flex-direction: row;
  }

  /* Step 12: Edit the css for the pricing and card classes to match our example. Part of achieving this is by using a flex-property to specify a ‚Äúsize‚Äù of 275px. Notice that the elements do not have the same height, but do have the same width. */

  .card {
    /* display: flex;
  flex-direction: column; */
    flex-basis: 275px;
  }
  .pricing {
    display: flex;
    /* flex-direction: row;
  justify-content: center; */
    align-items: center;
  }
  /* Step 13: Modify the first header (the one not inside main) so that it remains visible at the top of the screen even as we scroll down. Make sure that it is always visible.
  
  Targeted only the first header using the child selector. Positioned it fixed so it would remain visible. The fixed position places the header on top of main, so I gave it padding to be visible */

  body > header {
    position: fixed;
    width: 100%;
  }

  main {
    padding-top: 6rem;
  }
}

/* styles to apply if a user's device settings are set to reduced motion. 

Step 14: The logo should appear but not be animated if prefers-reduced-motion is selected in the accessibility preferences. 

Set animation to stop in this media query */

@media all and (prefers-reduced-motion: reduce) {
  #logo {
    animation: none;
  }
}

/* styles to apply when the page is printed in portrait mode. */

@media print {
  /* Step 15 & 16: Change the font on your body to Arial with a backup value of Helvetica. The background image should be removed. */
  body {
    font-family: Arial, Helvetica;
    background-image: none;
  }

  /* Edit the nav/nav_links elements so that they are spaced according to the image above.
  
  Made the nav use its entire container width so I could leverage justify content to space the nav links across the container */
  nav {
    width: 100%;
  }

  .nav_links {
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
  }

  /* Step 18: Edit the pricing class so that the elements align along the bottom.  As long as it aligns along the bottom we don't care if the cards aren't the same height. 
  
  Used nowrap so they would stay in the same row. Used align end to make each card align on the bottom of the flex container */
  .pricing {
    display: flex;
    flex-wrap: nowrap;
    align-items: end;
  }

  /* Step 19: The card elements should have a solid border 2px of #45ADDD and use flex-basis of 325px.  */
  .card {
    border: solid 2px #45ADDD;
    flex-basis: 325;
  }

  /* Step 20: No part of the gallery should be visible. */
  .gallery, #gallery {
    display: none;
  }

  /* Step 21: Without using list-style-type add the thumbs up entity as shown in the cards. 
  
  Targeted the second li child using nth-child and put the content after it using psuedo-element. Used Fn + E to get the emoji keyboard */
  .card li:nth-child(2)::after {
    content: "üëç";
  }
}
